{
  "document_title": "Scalable Vector Graphics (SVG) Generation Guide for LLMs",
  "description": "This document provides a comprehensive guide for an LLM to understand and generate Scalable Vector Graphics (SVG) code. SVG is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation.",
  "svg_basics": {
    "what_is_svg": "SVG (Scalable Vector Graphics) is an XML-based vector image format for two-dimensional graphics. Unlike raster images (like JPG, PNG), SVGs are resolution-independent, meaning they scale perfectly without pixelation.",
    "use_cases": [
      "Icons",
      "Logos",
      "Illustrations",
      "Charts and Graphs",
      "Interactive web elements"
    ],
    "advantages": [
      "Scalable without loss of quality",
      "Smaller file sizes for complex graphics compared to raster",
      "Editable with text editors",
      "Searchable, indexable, scriptable, and accessible",
      "Supports interactivity and animation"
    ]
  },
  "core_svg_structure": {
    "root_element": "<svg>",
    "required_attributes": {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "Specifies the width of the SVG viewport (e.g., '100', '100%', '200px')",
      "height": "Specifies the height of the SVG viewport (e.g., '100', '100%', '200px')",
      "viewBox": "Defines the position and dimension, in user space, of an SVG viewport. Format: 'min-x min-y width height'. This allows scaling of the internal graphics independently of the 'width' and 'height' attributes."
    },
    "example_basic_structure": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\n  \n</svg>"
  },
  "common_svg_elements": [
    {
      "name": "rect",
      "description": "A rectangle.",
      "attributes": {
        "x": "The x-axis coordinate of the top-left corner.",
        "y": "The y-axis coordinate of the top-left corner.",
        "width": "The width of the rectangle.",
        "height": "The height of the rectangle.",
        "rx": "The x-axis radius of the corners (for rounded rectangles).",
        "ry": "The y-axis radius of the corners (for rounded rectangles)."
      },
      "example": "<rect x=\"10\" y=\"10\" width=\"80\" height=\"50\" fill=\"blue\" stroke=\"black\" stroke-width=\"2\" />"
    },
    {
      "name": "circle",
      "description": "A circle.",
      "attributes": {
        "cx": "The x-axis coordinate of the center.",
        "cy": "The y-axis coordinate of the center.",
        "r": "The radius of the circle."
      },
      "example": "<circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"red\" opacity=\"0.7\" />"
    },
    {
      "name": "ellipse",
      "description": "An ellipse.",
      "attributes": {
        "cx": "The x-axis coordinate of the center.",
        "cy": "The y-axis coordinate of the center.",
        "rx": "The x-axis radius.",
        "ry": "The y-axis radius."
      },
      "example": "<ellipse cx=\"100\" cy=\"50\" rx=\"80\" ry=\"30\" fill=\"green\" stroke=\"purple\" stroke-width=\"3\" />"
    },
    {
      "name": "line",
      "description": "A straight line.",
      "attributes": {
        "x1": "The x-axis coordinate of the start point.",
        "y1": "The y-axis coordinate of the start point.",
        "x2": "The x-axis coordinate of the end point.",
        "y2": "The y-axis coordinate of the end point."
      },
      "example": "<line x1=\"10\" y1=\"10\" x2=\"90\" y2=\"90\" stroke=\"black\" stroke-width=\"3\" />"
    },
    {
      "name": "polyline",
      "description": "A series of connected straight line segments.",
      "attributes": {
        "points": "A list of x,y coordinates separated by spaces or commas (e.g., '10,10 20,20 30,10')."
      },
      "example": "<polyline points=\"10,10 20,40 30,10 40,40 50,10\" fill=\"none\" stroke=\"orange\" stroke-width=\"2\" />"
    },
    {
      "name": "polygon",
      "description": "A closed shape consisting of a set of connected straight line segments.",
      "attributes": {
        "points": "A list of x,y coordinates separated by spaces or commas (e.g., '100,10 40,198 190,78 10,78 160,198')."
      },
      "example": "<polygon points=\"100,10 40,198 190,78 10,78 160,198\" fill=\"gold\" stroke=\"brown\" stroke-width=\"2\" />"
    },
    {
      "name": "path",
      "description": "A generic element to define a path. Uses a 'd' (data) attribute with path commands.",
      "attributes": {
        "d": "Path data. Commands include M (moveto), L (lineto), H (horizontal lineto), V (vertical lineto), C (curveto), S (smooth curveto), Q (quadratic Bezier curveto), T (smooth quadratic Bezier curveto), A (elliptical arc), Z (closepath). Uppercase commands are absolute coordinates, lowercase are relative."
      },
      "example": "<path d=\"M10 10 L90 10 L90 90 L10 90 Z\" fill=\"lightgray\" stroke=\"darkgray\" stroke-width=\"2\" />\n\n<path d=\"M10 10 C 20 20, 40 20, 50 10 S 80 0, 90 10\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\" />\n"
    },
    {
      "name": "text",
      "description": "A text string.",
      "attributes": {
        "x": "The x-axis coordinate of the text anchor point.",
        "y": "The y-axis coordinate of the text anchor point.",
        "font-family": "The font family.",
        "font-size": "The font size.",
        "text-anchor": "Alignment of the text (start, middle, end)."
      },
      "example": "<text x=\"50\" y=\"50\" font-family=\"Arial\" font-size=\"20\" fill=\"black\" text-anchor=\"middle\">Hello SVG!</text>"
    },
    {
      "name": "g",
      "description": "A container for grouping other SVG elements. Attributes applied to the 'g' element are inherited by its children.",
      "attributes": {
        "transform": "Applies transformations (translate, rotate, scale, skewX, skewY, matrix) to the group."
      },
      "example": "<g transform=\"translate(50,50) rotate(45)\">\n  <rect x=\"0\" y=\"0\" width=\"30\" height=\"30\" fill=\"cyan\" />\n  <circle cx=\"15\" cy=\"15\" r=\"10\" fill=\"magenta\" />\n</g>"
    }
  ],
  "common_styling_attributes": [
    {
      "attribute": "fill",
      "description": "The color used to paint the interior of the shape.",
      "values": "color name (e.g., 'red'), hex code (e.g., '#FF0000'), RGB (e.g., 'rgb(255,0,0)'), 'none'."
    },
    {
      "attribute": "stroke",
      "description": "The color of the outline of the shape.",
      "values": "color name, hex code, RGB, 'none'."
    },
    {
      "attribute": "stroke-width",
      "description": "The width of the stroke.",
      "values": "numeric value (e.g., '1', '2.5')."
    },
    {
      "attribute": "opacity",
      "description": "The opacity of the element.",
      "values": "numeric value from 0 (fully transparent) to 1 (fully opaque)."
    },
    {
      "attribute": "transform",
      "description": "A list of transformations to be applied to the element.",
      "values": "translate(x,y), rotate(angle,cx,cy), scale(sx,sy), skewX(angle), skewY(angle), matrix(...)."
    }
  ],
  "llm_generation_tips": [
    "Always start with the basic `<svg>` root element including `xmlns`, `width`, `height`, and `viewBox`.",
    "Use `viewBox` for responsive scaling; it allows you to define a coordinate system independent of the final display size.",
    "For simple shapes, prefer `rect`, `circle`, `ellipse`, `line`, `polyline`, `polygon`.",
    "Use `path` for complex or custom shapes where other elements are insufficient.",
    "Group related elements using `<g>` and apply transformations to the group for easier manipulation.",
    "Use descriptive attribute values (e.g., 'fill=\"red\"' instead of just 'red').",
    "Ensure all attributes are properly quoted.",
    "For colors, use named colors, hex codes, or RGB values.",
    "When asked for a specific shape, identify the most appropriate SVG element.",
    "If asked for a complex drawing, break it down into simpler shapes and combine them.",
    "Remember that SVG coordinates start from the top-left corner (0,0), with x increasing to the right and y increasing downwards."
  ],
  "example_complex_svg_request_and_response": {
    "request_example": "Generate an SVG of a simple house with a square body, a triangular roof, and a rectangular door.",
    "llm_thought_process": [
      "Identify main shapes: square for body, triangle for roof, rectangle for door.",
      "Determine coordinates and dimensions for each shape.",
      "Use `rect` for body and door.",
      "Use `polygon` for the triangular roof.",
      "Combine them within a single `<svg>` tag."
    ],
    "generated_svg_example": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\n  \n  <rect x=\"50\" y=\"80\" width=\"100\" height=\"80\" fill=\"#A0522D\" stroke=\"black\" stroke-width=\"2\" />\n\n  \n  <polygon points=\"40,80 160,80 100,20\" fill=\"#8B0000\" stroke=\"black\" stroke-width=\"2\" />\n\n  \n  <rect x=\"85\" y=\"120\" width=\"30\" height=\"40\" fill=\"#696969\" stroke=\"black\" stroke-width=\"1\" />\n</svg>"
  }
}
